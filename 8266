/* *****************************************************************
 *
 * *****************************************************************/

#define BLINKER_WIFI
//#define BLINKER_ESP_SMARTCONFIG

#include <Blinker.h>

char auth[] = "9a429d85f071";
char ssid[] = "1502";
char pswd[] = "PassWord.1235";

BlinkerNumber HUMI("humi");   //空气湿度
BlinkerNumber TEMP("temp");   //
BlinkerNumber TU("turang");   //土壤湿度

// Download Adafruit DHT-sensor-library library here:
// https://github.com/adafruit/DHT-sensor-library
#include <DHT.h>

#define DHTPIN 2

#define DHTTYPE DHT11   // DHT 11

DHT dht(DHTPIN, DHTTYPE);

BlinkerNumber Number1("num-count");       //计数按钮
BlinkerButton Button1("btn-led");       //开关灯按钮
BlinkerButton Button2("btn-js");       //浇水开关按钮
BlinkerButton Button3("btn-js10");       //浇水十秒开关按钮
BlinkerButton Button4("btn-js");       //浇水开关按钮
BlinkerButton Button5("btn-js3");       //浇水十秒开关按钮

uint32_t read_time = 0;

float humi_read, temp_read;

void dataRead(const String & data)
{
    BLINKER_LOG("Blinker readString: ", data);

    Blinker.vibrate();
    
    uint32_t BlinkerTime = millis();
    
    Blinker.print("millis", BlinkerTime);
}

void heartbeat()
{
    HUMI.print(humi_read);
    TEMP.print(temp_read);
}

void setup()
{
    Serial.begin(115200);
    BLINKER_DEBUG.stream(Serial);

    pinMode(LED_BUILTIN, OUTPUT);
    digitalWrite(LED_BUILTIN, LOW);
   // Blinker.begin(auth);
   // Blinker.attachData(dataRead);
    Blinker.begin(auth, ssid, pswd);
    Blinker.attachData(dataRead);
    Blinker.attachHeartbeat(heartbeat);
    
    dht.begin();
}

void loop()
{
    Blinker.run();

    if (read_time == 0 || (millis() - read_time) >= 2000)
    {
        read_time = millis();

        float h = dht.readHumidity();
        float t = dht.readTemperature();        

        if (isnan(h) || isnan(t)) {
            BLINKER_LOG("Failed to read from DHT sensor!");
            return;
        }

        float hic = dht.computeHeatIndex(t, h, false);

        humi_read = h;
        temp_read = t;

        BLINKER_LOG("Humidity: ", h, " %");
        BLINKER_LOG("Temperature: ", t, " *C");
        BLINKER_LOG("Heat index: ", hic, " *C");
    }
}